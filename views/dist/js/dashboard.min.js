angular.module("RDash", ["ui.bootstrap", "ui.router", "ngCookies"]) /*,angular.module("app",["ui.bootstrap","ui.router","ngCookies"])*/ ;
"use strict";
angular.module('RDash').service('EventHandler', function errorHandler($location) {
    var errorListeners = [];
    this.error = function(res) {
        var error, status;
        console.log("ERROR", res);
        if(res.status){
            error = res.data;
            status = res.status;
            if (status === 401) {
                $location.url('/');
            }
            var req = res.config;
            console.log("HTTP Error: " + status + "  " + req.method + " " + req.url, error.message);
        } else {
            error = res;
            console.log("APP Error: ", error.message);
        }
        for (var i = errorListeners.length - 1; i >= 0; i--) {
            errorListeners[i](error, status);
        }
    };
    this.addErrorListener = function(callback) {
        errorListeners.push(callback);
    };
});


angular.module('RDash').service('Http', function httpService($location, $http, EventHandler) {
    var errorListeners = [];
    /**
     * Url del servidor
     * @type {string}
     */
    this.serverUrl = $location.protocol() + '://'+ $location.host() + ':' + '3000/api/';
    //this.serverUrl = '/api/';
    /**
     * Método encargado de hacer peticiones HTTP Post
     * @param relativRoute Ruta relativa a donde realizar la petición
     * @param body Objeto a mandar en la petición HTTP
     * @returns {*}
     */
    this.post = function(relativRoute, body) {
        var url = "POST " + this.serverUrl + relativRoute;
        dev(url);
        return $http.post(this.serverUrl + relativRoute, body, {
            withCredentials: true
        }).then(function(res) {
            return res.data;
        }, EventHandler.error);
    };
    /**
     * Método encargado de realizar peticiones HTTP Get
     * @param relativRoute Ruta a donde se realizará la petición Get
     * @returns {*}
     */
    this.get = function(relativRoute) {
        var url = "GET " + this.serverUrl + relativRoute;
        dev(url);
        return $http.get(this.serverUrl + relativRoute, {
            withCredentials: true
        }).then(function(res) {
            return res.data;
        }, EventHandler.error);
    };
    /**
     * Método encargado de realizar peticiones HTTP Delete
     * @param relativRoute Ruta a donde se realizará la petición Delete
     * @returns {*}
     */
    this.delete = function(relativRoute) {
        var url = "DELETE " + this.serverUrl + relativRoute;
        dev(url);
        return $http.delete(this.serverUrl + relativRoute, {
            withCredentials: true
        }).then(function(res) {
            return res.data;
        }, EventHandler.error);
    };
    /**
     * Método que hace logs en la consola JavaScript
     * @param message El mensaje a mostrar en la consola
     */
    function dev(message) {
        console.log("HTTP:" + message);
    }
});


angular.module('RDash').service('Proyecto', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO');
    self = this;

    self.getAll = function() {
        return Http.get('proyectos');
    };

    self.get = function(proyectoId) {
        return Http.get('proyectos/' + proyectoId);
    };

    self.save = function(proyecto) {
        return Http.post('proyectos/', proyecto);
    };

    self.delete = function(proyectoId) {
        return Http.delete('proyectos/'+ proyectoId);
    };

    self.getSubproyectos = function(proyectoId){
        return Http.get('proyectos/'+proyectoId+'/subproyectos');
    };

});

angular.module('RDash').service('Subproyecto', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO_Subproyecto');
    self = this;

    self.getAll = function() {
        return Http.get('subproyectos');
    };

    self.get = function(proyectoId) {
        return Http.get('subproyectos/' + proyectoId);
    };

    self.save = function(proyecto) {
        return Http.post('subproyectos/', proyecto);
    };

    self.delete = function(proyectoId) {
        return Http.delete('subproyectos/'+ proyectoId);
    };

    self.getTareas = function(subproyectoId){
        return Http.get('subproyectos/'+subproyectoId+'/tareas');
    };


});

angular.module('RDash').service('Tarea', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO_Tarea.');
    self = this;

    self.getAll = function() {
        return Http.get('tareas');
    };

    self.get = function(tareaId) {
        return Http.get('tareas/' + tareaId);
    };

    self.save = function(tarea) {
        return Http.post('tareas/', tarea);
    };

    self.delete = function(tareaId) {
        return Http.delete('tareas/'+ tareaId);
    };

    self.getRegistros = function(tareaId){
        return Http.get('tareas/'+tareaId+'/registro');
    };


});


angular.module('RDash').service('Departamento', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO_Departamento');
    self = this;

    self.getAll = function() {
        return Http.get('departamentos');
    };

    self.get = function(departamentoId) {
        return Http.get('departamentos/' + departamentoId);
    };

    self.save = function(departamento) {
        return Http.post('departamentos/', departamento);
    };

    self.delete = function(departamentoId) {
        return Http.delete('departamentos/'+ departamentoId);
    };

});

angular.module('RDash').service('Colaborador', function($rootScope, Http, EventHandler) {
    console.log('SERVICIO_CLBR');
    self = this;

    self.getAll = function() {
        return Http.get('colaboradores');
    };

    self.get = function(colaboradorId) {
        return Http.get('colaboradores/' + colaboradorId);
    };

    self.save = function(colaborador) {
        return Http.post('colaboradores/', colaborador);
    };

    self.delete = function(colaboradorId) {
        return Http.delete('proyectos/'+ colaboradorId);
    };

    self.getSubproyectos = function(colaboradorId){
        return Http.get('colaboradores/'+colaboradorId+'/subproyectos');
    };

});


angular.module("RDash").config(["$stateProvider", "$urlRouterProvider", function(t, e) {
    e.otherwise("/"), t.state("index", {
        url: "/",
        templateUrl: "templates/dashboard.html"
    }).state("tables", {
        url: "/tables",
        templateUrl: "templates/tables.html"
    }).state("proyectos", {
        url: "/proyectos",
        templateUrl: "../app/proyectos/proyectos.html"
    }).state("editProyecto", {
        url: "/proyectos/edit",
        templateUrl: "../app/proyectos/editProyecto.html"
    }).state("editSubproyecto", {
        url: "/subproyectos/edit",
        templateUrl: "../app/subproyectos/editSubroyecto.html"
    }).state("editTarea", {
        url: "/tareas/edit",
        templateUrl: "../app/tareas/editTarea.html"
    })
}]);

function AlertsCtrl(e) {
    e.alerts = [{
        type: "success",
        msg: "Gracias por su visita!"
    }, {
        type: "danger",
        msg: "Se ha detectado una inconsistencia."
    }], e.addAlert = function() {
        e.alerts.push({
            msg: "Otra alerta!"
        })
    }, e.closeAlert = function(t) {
        e.alerts.splice(t, 1)
    }
}
angular.module("RDash").controller("AlertsCtrl", ["$scope", AlertsCtrl]);

function MasterCtrl(t,e){
    var g = 992;
    t.getWidth = function(){
        return window.innerWidth
    }, t.$watch(t.getWidth, function(o, n){
        o >= g ? angular.isDefined(e.get("toggle")) ? t.toggle = !!e.get("toggle") : t.toggle = !0 : t.toggle = !1
    }), t.toggleSidebar = function(){
        t.toggle = !t.toggle,e.put("toggle", t.toggle)
    }, window.onresize = function(){
        t.$apply()
    }
}


angular.module("RDash").controller("MasterCtrl", ["$scope", "$cookieStore", MasterCtrl]);

var idProyectoActual = 1;
var idProyActual;
var idSubProyActual;
var idTareaActual;
var idColaboradorActual;

angular.module("RDash").controller('ProyectosCtrl', function($scope, /*$mdDialog,*/ /*$mdEditDialog,*/ $location, Proyecto) {
    console.log('CONTROLADOR_PRY');
    $scope.selected = [];

    refresh();

    function refresh() {
        Proyecto.getAll().then(function(proyectos) {
            $scope.proyectos = proyectos;
        });
    }


    $scope.select = function(proyecto) {
        $scope.proyectoSelected = proyecto;
    };

    $scope.editProyecto = function(proyecto) {
        idProyActual = proyecto;
        idProyectoActual = proyecto.id;
    };

    $scope.addProyecto = function() {
        idProyActual = null;
        idProyectoActual = 0;
    };

    $scope.delProyecto = function(ev, proyecto) {
        Proyecto.delete(proyecto.id).then(function(){
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            });
        });

    };


    $scope.getProyectos = function() {
        $scope.promise = Proyecto.getAll().$promise;
    };

    $scope.getProyecto = function() {
//        console.log('IdProyecto get : '+$scope.id);
//        $scope.promise = Proyecto.getAll().$promise;
    };


    $scope.query = {
        order: 'nombre',
        limit: 10,
        page: 1
    };

});

angular.module("RDash").controller('editProyectosCtrl', function($scope, /*$mdDialog, $mdEditDialog,*/ $location, Proyecto, Subproyecto) {
    console.log('CONTROLADOR_EDIT_PRY');
    $scope.selected = [];

    refresh();

    function refresh() {
        $scope.proyecto =idProyActual;
        if (idProyActual){
            Proyecto.getSubproyectos(idProyActual.id).then(function(subproyectos) {
                $scope.subproyectos = subproyectos;
            });
        }

    }

    $scope.guardarProyecto = function() {
        var estadpPry = $scope.proyecto.estado;
        if ($scope.proyecto.id <= 0){
            estadpPry='N';
        }
        var proyectoTmp = {
            id: $scope.proyecto.id,
            nombre: $scope.proyecto.nombre,
            descripcion: $scope.proyecto.descripcion,
            estado: estadpPry
        };
        $scope.promise = Proyecto.save(proyectoTmp).then(function(){
            $location.path('/proyectos');
        }).$promise;
    };

    $scope.cancel = function(){

        $location.path('/proyectos');
    }

    $scope.editSubroyecto = function(subproyecto){
        idSubProyActual = subproyecto;
        $location.path('/subproyectos/edit');
    }

    $scope.addSubroyecto = function() {
        idSubProyActual = null;
    };

    $scope.delSubroyecto = function(ev, subproyecto) {
        Subproyecto.delete(subproyecto.id).then(function(){
            Proyecto.getSubproyectos(idProyActual.id).then(function(subproyectos) {
                $scope.subproyectos = subproyectos;
            });
        });

    };


});

angular.module("RDash").controller('editSubproyectosCtrl', function($scope, /*$mdDialog, $mdEditDialog,*/ $location, Proyecto, Subproyecto, Departamento, Tarea) {
    console.log('CONTROLADOR_EDIT_SB');
    $scope.selected = [];

    refreshSb();

    function refreshSb() {
        $scope.subproyecto = idSubProyActual;
        Departamento.getAll().then(function(departamentos) {
            $scope.departamentos = departamentos;
        });
        if (idSubProyActual){
            Subproyecto.getTareas(idSubProyActual.id).then(function(tareas) {
                $scope.tareas = tareas;
            });
        }
    }

    $scope.guardarSubproyecto = function() {
        var estadpPry = $scope.subproyecto.estado;
        console.log('estadpSbPry='+estadpPry);
        if ($scope.subproyecto.id <= 0){
            estadpPry='N';
        }
        var subproyectoTmp = {
            id: $scope.subproyecto.id,
            nombre: $scope.subproyecto.nombre,
            descripcion: $scope.subproyecto.descripcion,
            estado: estadpPry,
            ProyectoId: idProyActual.id,
            DepartamentoId: $scope.subproyecto.DepartamentoId
        };
        $scope.promise = Subproyecto.save(subproyectoTmp).then(function(){
            $location.path('/proyectos/edit');
        }).$promise;
    };

    $scope.cancel = function(){
        $location.path('/proyectos/edit');
    };

    $scope.editTarea = function(tarea){
        idTareaActual = tarea;
        idTareaActual.fecini = new Date(idTareaActual.fecini);
        idTareaActual.fecfin = new Date(idTareaActual.fecfin);
        console.log(idTareaActual.fecini);
        $location.path('/tareas/edit');
    }

    $scope.addTarea = function() {
        idTareaActual = null;
    };

    $scope.delTarea = function(ev, tarea) {
        Tarea.delete(tarea.id).then(function(){
            Subproyecto.getTareas(idSubProyActual.id).then(function(tareas) {
                $scope.tareas = tareas;
            });
        });

    };

});

angular.module("RDash").controller('editTareasCtrl', function($scope, /*$mdDialog, $mdEditDialog,*/ $location, Proyecto, Subproyecto, Departamento, Tarea) {
    console.log('CONTROLADOR_EDIT_TR');
    $scope.selected = [];

    refreshSb();

    function refreshSb() {
        $scope.tarea = idTareaActual;
        /*if (idTareaActual){
            Tarea.getTareas(idSubProyActual.id).then(function(tareas) {
                $scope.tareas = tareas;
            });
        }*/
        //console.log('IdSubProyecto get : '+idSubProyActual.id);
    }

    $scope.guardarTarea = function() {
        var estadoTarea = $scope.tarea.estado;
        if ($scope.tarea.id <= 0){
            estadoTarea='N';
        }
        var tareaTmp = {
            id: $scope.tarea.id,
            nombre: $scope.tarea.nombre,
            descripcion: $scope.tarea.descripcion,
            fecini: new Date($scope.tarea.fecini),
            fecfin: new Date($scope.tarea.fecfin),
            estado: estadoTarea,
            SubproyectoId: idSubProyActual.id
        };
        $scope.promise = Tarea.save(tareaTmp).then(function(){
            $location.path('/subproyectos/edit');
        }).$promise;
    };

    $scope.cancel = function(){
        $location.path('/subproyectos/edit');
    };
/*
    $scope.editTarea = function(tarea){
        idTareaActual = tarea;
        $location.path('/tareas/edit');
    }

    $scope.addTarea = function() {
        idSubProyActual = null;
    };

    $scope.delTarea = function(ev, tarea) {
        Tarea.delete(tarea.id).then(function(){
            Subproyecto.getTareas(idSubProyActual.id).then(function(tareas) {
                $scope.tareas = tareas;
            });
        });

    };
*/
});

angular.module("RDash").controller('ColaboradoresCtrl', function($scope, /*$mdDialog,*/ /*$mdEditDialog,*/ $location, Colaborador) {
    console.log('CONTROLADOR_CLBR');
    $scope.selected = [];

    refresh();

    function refresh() {
        Proyecto.getAll().then(function(proyectos) {
            $scope.proyectos = proyectos;
        });
    }


    $scope.select = function(proyecto) {
        $scope.proyectoSelected = proyecto;
    };

    $scope.editProyecto = function(proyecto) {
        idProyActual = proyecto;
        idProyectoActual = proyecto.id;
    };

    $scope.addProyecto = function() {
        idProyActual = null;
        idProyectoActual = 0;
    };

    $scope.delProyecto = function(ev, proyecto) {
        Proyecto.delete(proyecto.id).then(function(){
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            });
        });

    };


    $scope.getProyectos = function() {
        $scope.promise = Proyecto.getAll().$promise;
    };

    $scope.getProyecto = function() {
//        console.log('IdProyecto get : '+$scope.id);
//        $scope.promise = Proyecto.getAll().$promise;
    };


    $scope.query = {
        order: 'nombre',
        limit: 10,
        page: 1
    };

});


function rdLoading(){
    var d = {
        restrict: "AE",
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return d
}
angular.module("RDash").directive("rdLoading", rdLoading);

function rdWidgetBody(){
    var d = {
        requires: "^rdWidget",
        scope: {
            loading: "=?",
            classes: "@?"
        },
        transclude: !0,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: "E"
    };
    return d
}
angular.module("RDash").directive("rdWidgetBody", rdWidgetBody);

function rdWidgetFooter(){
    var e = {
        requires: "^rdWidget",
        transclude: !0,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: "E"
    };
    return e
}
angular.module("RDash").directive("rdWidgetFooter", rdWidgetFooter);

function rdWidgetTitle(){
    var i = {
        requires: "^rdWidget",
        scope: {
            title: "@",
            icon: "@"
        },
        transclude: !0,
        template: '<div class="widget-header"><div class="row"><div class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-right col-xs-6 col-sm-4" ng-transclude></div></div></div>',
        restrict: "E"
    };
    return i
}
angular.module("RDash").directive("rdWidgetHeader", rdWidgetTitle);

function rdWidget(){
    var d = {
        transclude: !0,
        template: '<div class="widget" ng-transclude></div>',
        restrict: "EA"
    };
    return d
}
angular.module("RDash").directive("rdWidget", rdWidget);
