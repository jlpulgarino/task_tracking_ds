/*angular.module("RDash", ["ui.bootstrap", "ngCookies", "ui.router","gantt"]);*/ /*,angular.module("app",["ui.bootstrap","ui.router","ngCookies"])*/
angular.module('RDash', ['ui.bootstrap', 'ui.router', 'ui.tree','ngRoute', 'ngCookies', 'gantt', 'gantt.table', 'gantt.movable', 'gantt.tooltips','gantt.tree','chart.js','ntt.TreeDnD']);
"use strict";
angular.module('RDash').service('EventHandler', function errorHandler($location) {
    var errorListeners = [];
    this.error = function(res) {
        var error, status;
        console.log("ERROR", res);
        if(res.status){
            error = res.data;
            status = res.status;
            if (status === 401) {
                $location.url('/');
            }
            var req = res.config;
            console.log("HTTP Error: " + status + "  " + req.method + " " + req.url, error.message);
        } else {
            error = res;
            console.log("APP Error: ", error.message);
        }
        for (var i = errorListeners.length - 1; i >= 0; i--) {
            errorListeners[i](error, status);
        }
    };
    this.addErrorListener = function(callback) {
        errorListeners.push(callback);
    };
});


angular.module('RDash').service('Http', function httpService($location, $http, EventHandler) {
    var errorListeners = [];
    /**
     * Url del servidor
     * @type {string}
     */
    this.serverUrl = $location.protocol() + '://'+ $location.host() + ':' + '3000/api/';
    //this.serverUrl = '/api/';
    /**
     * Método encargado de hacer peticiones HTTP Post
     * @param relativRoute Ruta relativa a donde realizar la petición
     * @param body Objeto a mandar en la petición HTTP
     * @returns {*}
     */
    this.post = function(relativRoute, body) {
        var url = "POST " + this.serverUrl + relativRoute;
        dev(url);
        return $http.post(this.serverUrl + relativRoute, body, {
            withCredentials: true
        }).then(function(res) {
            return res.data;
        }, EventHandler.error);
    };
    /**
     * Método encargado de realizar peticiones HTTP Get
     * @param relativRoute Ruta a donde se realizará la petición Get
     * @returns {*}
     */
    this.get = function(relativRoute) {
        var url = "GET " + this.serverUrl + relativRoute;
        dev(url);
        return $http.get(this.serverUrl + relativRoute, {
            withCredentials: true
        }).then(function(res) {
            return res.data;
        }, EventHandler.error);
    };
    /**
     * Método encargado de realizar peticiones HTTP Delete
     * @param relativRoute Ruta a donde se realizará la petición Delete
     * @returns {*}
     */
    this.delete = function(relativRoute) {
        var url = "DELETE " + this.serverUrl + relativRoute;
        dev(url);
        return $http.delete(this.serverUrl + relativRoute, {
            withCredentials: true
        }).then(function(res) {
            return res.data;
        }, EventHandler.error);
    };
    /**
     * Método que hace logs en la consola JavaScript
     * @param message El mensaje a mostrar en la consola
     */
    function dev(message) {
        console.log("HTTP:" + message);
    }
});


angular.module('RDash').service('Proyecto', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO');
    self = this;

    self.getAll = function() {
        return Http.get('proyectos');
    };

    self.get = function(proyectoId) {
        return Http.get('proyectos/' + proyectoId);
    };

    self.save = function(proyecto) {
        return Http.post('proyectos/', proyecto);
    };

    self.delete = function(proyectoId) {
        return Http.delete('proyectos/'+ proyectoId);
    };

    self.getSubproyectos = function(proyectoId){
        return Http.get('proyectos/'+proyectoId+'/subproyectos');
    };

    self.getGantt = function(colabrid, proyectoId, subproyectoId, estadoTarea, departamentoId){
        var filtroGantt=''+colabrid+'_'+subproyectoId+'_'+estadoTarea+'_'+departamentoId;
        return Http.get('proyectos/'+proyectoId+'/gantt/'+filtroGantt);
    };


});

angular.module('RDash').service('User', function($rootScope, $window, $location, Http, EventHandler) {
    console.log('JLPO_CREACION_user');
    var user = null;
    var self = this;


    self.getUser = function() {
        return user;
    };
    self.login = function(userLogin, callback) {
        Http.post('/login', userLogin).then(function(data, status, headers, config) {
            user = data;
            callback();
        });
    };
    self.checkLoggedin = function(userLogin) {
        Http.get('/loggedin').then(function(data, status, headers, config) {
            if (data !== '0') {
                user = data;
            }
        });
    };
    self.logout = function() {
        Http.post('/logout', {}).then(function(data, status, headers, config) {
            user = data;
        }).error(EventHandler.error);
    };


});

angular.module('RDash').service('Subproyecto', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO_Subproyecto');
    self = this;

    self.getAll = function() {
        return Http.get('subproyectos');
    };

    self.getAllbyDepto = function(idDepto) {
        return Http.get('subproyectos/departamento/'+idDepto);
    };

    self.get = function(proyectoId) {
        return Http.get('subproyectos/' + proyectoId);
    };

    self.save = function(proyecto) {
        return Http.post('subproyectos/', proyecto);
    };

    self.delete = function(proyectoId) {
        return Http.delete('subproyectos/'+ proyectoId);
    };

    self.getTareas = function(subproyectoId){
        return Http.get('subproyectos/'+subproyectoId+'/tareas');
    };


});

angular.module('RDash').service('Tarea', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO_Tarea.');
    self = this;

    self.getAll = function() {
        return Http.get('tareas');
    };

    self.get = function(tareaId) {
        return Http.get('tareas/' + tareaId);
    };

    self.save = function(tarea) {
        return Http.post('tareas/', tarea);
    };

    self.delete = function(tareaId) {
        return Http.delete('tareas/'+ tareaId);
    };

    self.getRegistros = function(tareaId){
        return Http.get('tareas/'+tareaId+'/registro');
    };


});


angular.module('RDash').service('Departamento', function($rootScope, Http, EventHandler) {
    console.log('JLPO_CREACION_SERVICIO_Departamento');
    self = this;

    self.getAll = function() {
        return Http.get('departamentos');
    };

    self.get = function(departamentoId) {
        return Http.get('departamentos/' + departamentoId);
    };

    self.save = function(departamento) {
        return Http.post('departamentos/', departamento);
    };

    self.delete = function(departamentoId) {
        return Http.delete('departamentos/'+ departamentoId);
    };

});

angular.module('RDash').service('Colaborador', function($rootScope, Http, EventHandler) {
    console.log('SERVICIO_CLBR');
    self = this;

    self.getAll = function() {
        return Http.get('colaboradores');
    };

    self.get = function(colaboradorId) {
        return Http.get('colaboradores/' + colaboradorId);
    };

    self.getByDepto = function(departamentoId) {
        return Http.get('colaboradores/departamento/' + departamentoId);
    };

    self.save = function(colaborador) {
        return Http.post('colaboradores/', colaborador);
    };

    self.login = function(credenciales) {
        return Http.post('colaboradores/login', credenciales);
    };


    self.delete = function(colaboradorId) {
        return Http.delete('colaboradores/'+ colaboradorId);
    };

    self.getSubproyectos = function(colaboradorId){
        return Http.get('colaboradores/'+colaboradorId+'/subproyectos');
    };

    self.getTareas = function(colaboradorId, filtro){
        return Http.get('colaboradores/'+colaboradorId+'/tareas/'+filtro);
    };


});

angular.module('RDash').service('Registro', function($rootScope, Http, EventHandler) {
    console.log('SERVICIO_CLBR');
    self = this;

    self.getAll = function() {
        return Http.get('registros');
    };

    self.get = function(regitroId) {
        return Http.get('registros/' + regitroId);
    };

    self.save = function(regitro) {
        return Http.post('registros/', regitro);
    };

    self.delete = function(regitroId) {
        return Http.delete('registros/'+ regitroId);
    };

    self.getSubproyectos = function(regitroId){
        return Http.get('registros/'+regitroId+'/subproyectos');
    };

});


angular.module('RDash').service('Estimacion', function($rootScope, Http, EventHandler) {
    console.log('SERVICIO_ESTM');
    self = this;

    self.getAll = function() {
        return Http.get('estimaciones');
    };

    self.get = function(estimacionId) {
        return Http.get('estimaciones/' + estimacionId);
    };

    self.save = function(estimacion) {
        return Http.post('estimaciones/', estimacion);
    };

    self.delete = function(estimacionId) {
        return Http.delete('estimaciones/'+ estimacionId);
    };


});

angular.module('RDash').service('Utilidad', function($rootScope, Http, EventHandler) {
    console.log('SERVICIO_Utilidad');
    self = this;


    self.getSemana = function(fecha) {
        return Http.get('utilidades/semana/' + fecha.valueOf());
    };

});


angular.module("RDash").config(["$stateProvider", "$urlRouterProvider", function(t, e) {
    e.otherwise("/"), t.state("index", {
        url: "/",
        templateUrl: "../app/login/login.html"
    }).state("logout", {
        url: "/logout",
        templateUrl: "../app/login/logout.html"
    }).state("tables", {
        url: "/tables",
        templateUrl: "templates/tables.html"
    }).state("dashboard", {
        url: "/dashboard",
        templateUrl: "templates/dashboard.html"
    }).state("proyectos", {
        url: "/proyectos",
        templateUrl: "../app/proyectos/proyectos.html"
    }).state("editProyecto", {
        url: "/proyectos/edit",
        templateUrl: "../app/proyectos/editProyecto.html"
    }).state("editSubproyecto", {
        url: "/subproyectos/edit",
        templateUrl: "../app/subproyectos/editSubroyecto.html"
    }).state("editTarea", {
        url: "/tareas/edit",
        templateUrl: "../app/tareas/editTarea.html"
    }).state("editTareaClbr", {
        url: "/tareas/editTareaClbr",
        templateUrl: "../app/tareas/editTarea.html"
    }).state("colaboradores", {
        url: "/colaboradores",
        templateUrl: "../app/colaboradores/colaboradores.html"
    }).state("editColaborador", {
        url: "/colaboradores/edit",
        templateUrl: "../app/colaboradores/editColaborador.html"
    }).state("cambioPsw", {
        url: "/colaboradores/cambioPsw",
        templateUrl: "../app/colaboradores/cambiaContrasena.html"
    }).state("gantt", {
        url: "/reportes/gantt",
        templateUrl: "../app/gantt/gantt.html"
    }).state("proyectoChart", {
        url: "/reportes/proyectoChart",
        templateUrl: "../app/proyectos/proyectoChart.html"
    }).state("listaTareas", {
        url: "/reportes/listaTareas",
        templateUrl: "../app/tareas/listaTarea.html"
    }).state("listaTareaSemana", {
        url: "/reportes/listaTareaSemana",
        templateUrl: "../app/tareas/listaTareaSemana.html"
    }).state("registro", {
        url: "/tareas/registro",
        templateUrl: "../app/tareas/registro.html"
    }).state("estimacion", {
        url: "/tareas/estimacion",
        templateUrl: "../app/tareas/estimacion.html"
    }).state("departamentos", {
        url: "/departamentos",
        templateUrl: "../app/departamentos/departamentos.html"
    }).state("editDepartamento", {
        url: "/departamentos/edit",
        templateUrl: "../app/departamentos/editDepartamento.html"
    })
}]);

function AlertsCtrl(e) {
    e.alerts = [{
        type: "success",
        msg: "Gracias por su visita!"
    }, {
        type: "danger",
        msg: "Se ha detectado una inconsistencia."
    }], e.addAlert = function() {
        e.alerts.push({
            msg: "Otra alerta!"
        })
    }, e.closeAlert = function(t) {
        e.alerts.splice(t, 1)
    }
}

var idProyectoActual = 1;
var idProyActual;
var idSubProyActual;
var idTareaActual;
var idColaboradorActual;
var idDepartamentoActual;
var idRegistroActual;
var idUsuarioActual;


angular.module("RDash").controller("AlertsCtrl", ["$scope", AlertsCtrl]);
function MasterCtrl(t,e){
    var g = 992;
    t.getWidth = function(){
        return window.innerWidth
    }, t.$watch(t.getWidth, function(o, n){
        o >= g ? angular.isDefined(e.get("toggle")) ? t.toggle = !!e.get("toggle") : t.toggle = !0 : t.toggle = !1
    }), t.toggleSidebar = function(){
        t.toggle = !t.toggle,e.put("toggle", t.toggle)
    }, window.onresize = function(){
        t.$apply()
    };

}


angular.module("RDash").controller("MasterCtrl", ["$scope", "$cookieStore", MasterCtrl]);


angular.module("RDash").controller('LoginCtrl', function($rootScope, $scope, $location, $route/*, $mdDialog*/, Colaborador, EventHandler) {

    //User.checkLoggedin();
    $scope.userLogin = {};
    $rootScope.userLogin = {};
    refresh();

   function refresh(){
       console.log(idUsuarioActual);
       if ((idUsuarioActual) && idUsuarioActual.id > 0){
           $rootScope.userLogin = idUsuarioActual;
           $location.path('/reportes/listaTareas');
       }
   }

    $scope.login = function(credenciales) {
        var errorMessage = null;
        var username = credenciales.username;
        var password = credenciales.password;
        var alertas = [];


        if (!username || username === "" || username === null) {
            errorMessage = 'Debe ingresar su usuario para realizar la autenticación';
            var msgErr = {
                type: "danger",
                msg: errorMessage
            };
            alertas.push(msgErr);
        } else if (!password || password === "" || password === null) {
            errorMessage = 'Debe ingresar su contraseña para realizar la autenticación';
            var msgErr = {
                type: "danger",
                msg: errorMessage
            };
            alertas.push(msgErr);
        }


            Colaborador.login(credenciales).then(function(usuarios){
                var usuario = {};
                if(usuarios != null && usuarios.length > 0){
                    usuario = usuarios[0];
                    $scope.userLogin = usuario;
                    $rootScope.userLogin = usuario;
                    $location.path('/reportes/listaTareas');
                    idUsuarioActual = usuario;
                }else{
                    errorMessage = 'Usuario o contraseña invalida.';
                    var msgErr = {
                        type: "danger",
                        msg: errorMessage
                    };
                    alertas.push(msgErr);
                    idUsuarioActual = {};
                }
                $scope.alerts = alertas;

            });


    };

    $scope.keyUpListener = function($event, credenciales) {
        if ($event.keyCode === 13) {
            $scope.login(credenciales);
        }
    };


});


angular.module("RDash").controller('LogoutCtrl', function($rootScope, $scope, $location, $route/*, $mdDialog*/, Colaborador, EventHandler) {

    //User.checkLoggedin();
    $scope.userLogin = {};
    $rootScope.userLogin = {};
    refresh();

   function refresh(){
       idUsuarioActual = null;
       $rootScope.userLogin = idUsuarioActual;

       $scope.login = function(){
           $location.path('/');
       }

   }


});


angular.module("RDash").controller('ProyectosCtrl', function($scope, /*$mdDialog,*/ /*$mdEditDialog,*/ $location, Proyecto) {
    console.log('CONTROLADOR_PRY');
    $scope.selected = [];

    refresh();

    function refresh() {

        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            });
        }
    }


    $scope.select = function(proyecto) {
        $scope.proyectoSelected = proyecto;
    };

    $scope.editProyecto = function(proyecto) {
        idProyActual = proyecto;
        idProyectoActual = proyecto.id;
    };

    $scope.addProyecto = function() {
        idProyActual = null;
        idProyectoActual = 0;
    };

    $scope.delProyecto = function(ev, proyecto) {
        Proyecto.delete(proyecto.id).then(function(){
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            });
        });

    };


    $scope.getProyectos = function() {
        $scope.promise = Proyecto.getAll().$promise;
    };

    $scope.getProyectoChart = function(proyecto) {
        idProyActual = proyecto;
        idProyectoActual = proyecto.id;
    };


    $scope.query = {
        order: 'nombre',
        limit: 10,
        page: 1
    };

});

angular.module("RDash").controller('ProyectosChartCtrl', function($scope,  $location, Proyecto) {
    console.log('CONTROLADOR_PRY_Chart');
    $scope.selected = [];

    refresh();

    function refresh() {
        $scope.labels = ["Inicio", "Semana 1", "Semana 2", "Semana 3", "Semana 4", "Semana 5", "Semana 6", "Semana 7","Semana 8","Semana 9"];
        $scope.series = ['Valor Estimado', 'Valor Real'];
        $scope.data = [
          [432, 384, 336, 288, 240, 192, 144, 96, 48, 0],
          [432, 400, 380, 310, 270, 200, 144, 90, 40, 0]
        ];
        $scope.onClick = function (points, evt) {
          console.log(points, evt);
        };
        $scope.datasetOverride = [{ yAxisID: 'y-axis-1' }];
        $scope.options = {
          scales: {
            yAxes: [
              {
                id: 'y-axis-1',
                type: 'linear',
                display: true,
                position: 'left'
              }
            ]
          }
        };
    }

});

angular.module("RDash").controller('editProyectosCtrl', function($scope, /*$mdDialog, $mdEditDialog,*/ $location, Proyecto, Subproyecto) {
    console.log('CONTROLADOR_EDIT_PRY');
    $scope.selected = [];

    refresh();

    function refresh() {
        $scope.proyecto =idProyActual;
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            if (idProyActual){
                Proyecto.getSubproyectos(idProyActual.id).then(function(subproyectos) {
                    $scope.subproyectos = subproyectos;
                });
            }
        }

    }

    $scope.guardarProyecto = function() {
        var estadpPry = $scope.proyecto.estado;
        if ($scope.proyecto.id <= 0){
            estadpPry='N';
        }
        var proyectoTmp = {
            id: $scope.proyecto.id,
            nombre: $scope.proyecto.nombre,
            descripcion: $scope.proyecto.descripcion,
            estado: estadpPry
        };
        $scope.promise = Proyecto.save(proyectoTmp).then(function(){
            $location.path('/proyectos');
        }).$promise;
    };

    $scope.cancel = function(){

        $location.path('/proyectos');
    }

    $scope.editSubroyecto = function(subproyecto){
        idSubProyActual = subproyecto;
        $location.path('/subproyectos/edit');
    }

    $scope.addSubroyecto = function() {
        idSubProyActual = null;
    };

    $scope.delSubroyecto = function(ev, subproyecto) {
        Subproyecto.delete(subproyecto.id).then(function(){
            Proyecto.getSubproyectos(idProyActual.id).then(function(subproyectos) {
                $scope.subproyectos = subproyectos;
            });
        });

    };


});

angular.module("RDash").controller('editSubproyectosCtrl', function($scope, /*$mdDialog, $mdEditDialog,*/ $location, Proyecto, Subproyecto, Departamento, Tarea) {
    console.log('CONTROLADOR_EDIT_SB');
    $scope.selected = [];

    refreshSb();

    function refreshSb() {
        $scope.subproyecto = idSubProyActual;
        Departamento.getAll().then(function(departamentos) {
            $scope.departamentos = departamentos;
        });
        if (idSubProyActual){
            Subproyecto.getTareas(idSubProyActual.id).then(function(tareas) {
                $scope.tareas = tareas;
            });
        }
    }

    $scope.guardarSubproyecto = function() {
        var estadpPry = $scope.subproyecto.estado;
        console.log('estadpSbPry='+estadpPry);
        if ($scope.subproyecto.id <= 0){
            estadpPry='N';
        }
        var subproyectoTmp = {
            id: $scope.subproyecto.id,
            nombre: $scope.subproyecto.nombre,
            descripcion: $scope.subproyecto.descripcion,
            estado: estadpPry,
            ProyectoId: idProyActual.id,
            DepartamentoId: $scope.subproyecto.DepartamentoId
        };
        $scope.promise = Subproyecto.save(subproyectoTmp).then(function(){
            $location.path('/proyectos/edit');
        }).$promise;
    };

    $scope.cancel = function(){
        $location.path('/proyectos/edit');
    };

    $scope.editTarea = function(tarea){
        idTareaActual = tarea;
        idTareaActual.fecini = new Date(idTareaActual.fecini);
        idTareaActual.fecfin = new Date(idTareaActual.fecfin);
        console.log(idTareaActual.fecini);
        $location.path('/tareas/edit');
    }

    $scope.addTarea = function() {
        idTareaActual = null;
    };

    $scope.delTarea = function(ev, tarea) {
        Tarea.delete(tarea.id).then(function(){
            Subproyecto.getTareas(idSubProyActual.id).then(function(tareas) {
                $scope.tareas = tareas;
            });
        });

    };

});

angular.module("RDash").controller('editTareasCtrl', function($scope, /*$mdDialog, $mdEditDialog,*/ $location, Proyecto, Subproyecto, Departamento, Tarea, Colaborador) {
    console.log('CONTROLADOR_EDIT_TR');
    $scope.selected = [];

    refreshSb();

    function refreshSb() {
        var deptoActual;
        $scope.rol = idUsuarioActual.rol;
        if(idUsuarioActual.rol == 'C'){
            deptoActual = idUsuarioActual.DepartamentoId;
        }else{
            deptoActual = idSubProyActual.DepartamentoId;
        }


        $scope.tarea = idTareaActual;
        $scope.deptoId = deptoActual;
        Colaborador.getByDepto(deptoActual).then(function(colaboradores) {
            $scope.colaboradores = colaboradores;
        });

        Subproyecto.getAllbyDepto(deptoActual).then(function(subproyectos) {
            $scope.subproyectos = subproyectos;
        });


    }

    $scope.guardarTarea = function() {
        var estadoTarea = $scope.tarea.estado;
        var subpryId = 0;
        if(idUsuarioActual.rol == 'C'){
            subpryId = $scope.tarea.SubproyectoId;
        }else{
            subpryId = idSubProyActual.id;
        }

        if ($scope.tarea.id <= 0){
            estadoTarea='N';
        }
        var tareaTmp = {
            id: $scope.tarea.id,
            nombre: $scope.tarea.nombre,
            descripcion: $scope.tarea.descripcion,
            fecini: new Date($scope.tarea.fecini),
            fecfin: new Date($scope.tarea.fecfin),
            estado: estadoTarea,
            horas: $scope.tarea.horas,
            ColaboradorId: $scope.tarea.ColaboradorId,
            SubproyectoId: subpryId
        };
        $scope.promise = Tarea.save(tareaTmp).then(function(){
            $location.path('/subproyectos/edit');
        }).$promise;
    };

    $scope.cancel = function(){
        if(idUsuarioActual.rol == 'C'){
            $location.path('/reportes/tareas');
        }else{
            $location.path('/subproyectos/edit');
        }
    };
});

angular.module("RDash").controller('ColaboradoresCtrl', function($scope,  $location, Colaborador) {
    console.log('CONTROLADOR_CLBR');
    $scope.selected = [];

    refresh();

    function refresh() {
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
                    Colaborador.getAll().then(function(colaboradores) {
                        $scope.colaboradores = colaboradores;
                    });
        }
    }


    $scope.editColaborador = function(colaborador) {
        idColaboradorActual = colaborador;
    };

    $scope.addColaborador = function() {
        idColaboradorActual = null;
        idProyectoActual = 0;
    };

    $scope.delColaborador = function(ev, colaborador) {
        Colaborador.delete(colaborador.id).then(function(){
            Colaborador.getAll().then(function(colaboradores) {
                $scope.colaboradores = colaboradores;
            });
        });

    };

});

angular.module("RDash").controller('editColaboradorCtrl', function($scope, $location, Colaborador, Departamento) {
    console.log('CONTROLADOR_EDIT_CLBR');

    refresh();

    function refresh() {
        $scope.colaborador =idColaboradorActual;
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            Departamento.getAll().then(function(departamentos) {
                $scope.departamentos = departamentos;
            });
        }
    }

    $scope.guardarColaborador = function() {
        var colaboradorTmp = {
            id: $scope.colaborador.id,
            nombre: $scope.colaborador.nombre,
            usuario: $scope.colaborador.usuario,
            rol: $scope.colaborador.rol,
            cargo: $scope.colaborador.cargo,
            email: $scope.colaborador.email,
            password: $scope.colaborador.password,
            DepartamentoId: $scope.colaborador.DepartamentoId
        };
        $scope.promise = Colaborador.save(colaboradorTmp).then(function(){
            $location.path('/colaboradores');
        }).$promise;
    };

    $scope.cancel = function(){

        $location.path('/colaboradores');
    }


});

angular.module("RDash").controller('cambiaContrCtrl', function($scope, $location, Colaborador, EventHandler) {
    console.log('CONTROLADOR_EDIT_CLBR');

    refresh();

    function refresh() {
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            $scope.colaborador = {
                passwordActual: null,
                password: null,
                passwordConf: null
            };
        }
    }

    $scope.cambiar = function() {
        var pswAnt = $scope.colaborador.passwordActual;
        var psw = $scope.colaborador.password;
        var pswCnf = $scope.colaborador.passwordConf;
        var correcto = true;

        if (pswAnt == idUsuarioActual.password){

        }

        var alertas = [];


        if (!pswAnt || pswAnt === "" || pswAnt === null || !psw || psw === "" || psw === null || !pswCnf || pswCnf === "" || pswCnf === null) {
            errorMessage = 'Debe ingresar todos los campos.';
            var msgErr = {
                type: "danger",
                msg: errorMessage
            };
            alertas.push(msgErr);
        } else if (pswAnt != idUsuarioActual.password) {
            errorMessage = 'Contraseña no valida';
            var msgErr = {
                type: "danger",
                msg: errorMessage
            };
            alertas.push(msgErr);
        } else if (pswCnf != psw) {
            errorMessage = 'Confirmaciòn de contraseña no es vàlida';
            var msgErr = {
                type: "danger",
                msg: errorMessage
            };
            alertas.push(msgErr);
        } else {
            var colaboradorTmp = {
                id: idUsuarioActual.id,
                nombre: idUsuarioActual.nombre,
                usuario: idUsuarioActual.usuario,
                rol: idUsuarioActual.rol,
                cargo: idUsuarioActual.cargo,
                email: idUsuarioActual.email,
                password: psw,
                DepartamentoId: idUsuarioActual.DepartamentoId
            };
            idUsuarioActual.password = psw;
            $scope.promise = Colaborador.save(colaboradorTmp).then(function(){
                $scope.colaborador = {
                    passwordActual: null,
                    password: null,
                    passwordConf: null
                };
                errorMessage = 'Se cambiò la contraseña correctamente.';
                var msgErr = {
                    type: "success",
                    msg: errorMessage
                };
                alertas.push(msgErr);
            }).$promise;
        }
        $scope.alerts = alertas;

    };

    $scope.cancel = function(){

        $location.path('/reportes/tareas');
    }


});


angular.module("RDash").controller('departamentosCtrl', function($scope,  $location, Departamento) {
    console.log('CONTROLADOR_DPTO');
    $scope.selected = [];

    refresh();

    function refresh() {
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            Departamento.getAll().then(function(departamentos) {
                $scope.departamentos = departamentos;
            });
        }
    }


    $scope.editDepartamento = function(departamento) {
        idDepartamentoActual = departamento;
    };

    $scope.addDepartamento = function() {
        idDepartamentoActual = null;
    };

    $scope.delDepartamento = function(ev, departamento) {
        Departamento.delete(departamento.id).then(function(){
            Departamento.getAll().then(function(departamentos) {
                $scope.departamentos = departamentos;
            });
        });

    };

});

angular.module("RDash").controller('editDepartamentoCtrl', function($scope, $location,  Departamento) {
    console.log('CONTROLADOR_EDIT_DPTO');

    refresh();

    function refresh() {
        $scope.departamento =idDepartamentoActual;
        if(!(idUsuarioActual)){
            $location.path('/login');
        }
    }

    $scope.guardarDepartamento = function() {
        var departamentoTmp = {
            id: $scope.departamento.id,
            nombre: $scope.departamento.nombre
        };
        $scope.promise = Departamento.save(departamentoTmp).then(function(){
            $location.path('/departamentos');
        }).$promise;
    };

    $scope.cancel = function(){

        $location.path('/departamentos');
    }


});


angular.module("RDash").controller('registroCtrl', function($scope, $location, Registro) {
    console.log('CONTROLADOR_REG');

    refresh();

    function refresh() {
        $scope.registro ={
            TareaId: idTareaActual.id
        };
        console.log($scope.registro);
    }

    $scope.guardarRegistro = function() {
        var registroTmp = {
            id: $scope.registro.id,
            fecha: $scope.registro.fecha,
            horas: $scope.registro.horas,
            TareaId: $scope.registro.TareaId
        };
        $scope.promise = Registro.save(registroTmp).then(function(){
            $location.path('/reportes/listaTareas');
        }).$promise;
    };

    $scope.cancel = function(){

        $location.path('/reportes/listaTareas');
    }


});

angular.module("RDash").controller('estimacionCtrl', function($scope, $location, Estimacion, Utilidad) {
    console.log('CONTROLADOR_REG');

    refresh();

    function refresh() {
        Utilidad.getSemana(new Date()).then(function(semanaCalc){
            $scope.estimacion ={
                semana: semanaCalc.semana,
                TareaId: idTareaActual.id
            };
        })
        console.log($scope.estimacion);
    }

    $scope.guardarEstimacion = function() {
        var estimacionTmp = {
            id: $scope.estimacion.id,
            semana: $scope.estimacion.semana,
            horas: $scope.estimacion.horas,
            TareaId: $scope.estimacion.TareaId
        };
        console.log(estimacionTmp);
        $scope.promise = Estimacion.save(estimacionTmp).then(function(){
            $location.path('/reportes/listaTareas');
        }).$promise;

    };

    $scope.cancel = function(){

        $location.path('/reportes/listaTareas');
    }


});


angular.module("RDash").controller('ganttController', function($scope, $location, Proyecto, Subproyecto, Colaborador) {
    console.log('CONTROLADOR_gantt');
    $scope.selected = [];

    refresh();


    function refresh() {
        var filtroGantt ={
            pryId : 0,
            /*sbpryId: 0,*/
            estadoTarea: 'T'
        };

        $scope.filtro = filtroGantt;

        var colbrId = 999999;
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            }).then(function(){
                Colaborador.getAll().then(function(colaboradores) {
                    $scope.colaboradores = colaboradores;
                });
            });
        }
    };

    $scope.refreshGantt = function(){
        var dataPrys=[];
        var estTarea = $scope.filtro.estadoTarea;
        var pryId = $scope.filtro.pryId;
        var clbrId = $scope.filtro.clbrId;
        var deptoId = 0;
        if(idUsuarioActual.rol == 'C'){
            clbrId = idUsuarioActual.id;
        }
        if(idUsuarioActual.rol != 'D'){
            deptoId = idUsuarioActual.DepartamentoId;
        }
        Proyecto.getGantt(clbrId,pryId,0,estTarea,deptoId).then(function(proyectos){
            for (var i = 0; i < proyectos.length; i++) {
                var dataPry = {
                    name: proyectos[i].nombre,
                    color: '#6691BF'
                };
                dataPrys.push(dataPry);
                for (var j = 0; j < proyectos[i].subproyectos.length; j++) {
                    var colorSubpry = '';
                    var colorSubpryAux = '';
                    var minDate;
                    var maxDate;
                    for (var k = 0; k < proyectos[i].subproyectos[j].tareas.length; k++) {
                        if (k === 0){
                            minDate =proyectos[i].subproyectos[j].tareas[k].fecini;
                            maxDate =proyectos[i].subproyectos[j].tareas[k].fecfin;
                            switch (proyectos[i].subproyectos[j].tareas[k].estado) {
                                case 'N':
                                    colorSubpry = "#1C05EB";
                                    break;
                                case 'C':
                                    colorSubpry = "#929292";
                                    break;
                                case 'I':
                                    colorSubpry = "#F3EF06";
                                    break;
                                case 'P':
                                    colorSubpry = "#06C923";
                                    break;
                            }
                        }else{
                            if(minDate  > proyectos[i].subproyectos[j].tareas[k].fecini){
                                minDate =proyectos[i].subproyectos[j].tareas[k].fecini;
                            }
                            if(maxDate  < proyectos[i].subproyectos[j].tareas[k].fecfin){
                                maxDate =proyectos[i].subproyectos[j].tareas[k].fecfin;
                            }
                            switch (proyectos[i].subproyectos[j].tareas[k].estado) {
                                case 'N':
                                    colorSubpryAux = "#1C05EB";
                                    break;
                                case 'C':
                                    colorSubpryAux = "#929292";
                                    break;
                                case 'I':
                                    colorSubpryAux = "#F3EF06";
                                    break;
                                case 'P':
                                    colorSubpryAux = "#06C923";
                                    break;
                            }
                            if (colorSubpry != colorSubpryAux){
                                colorSubpry = "#06C923";
                            }
                        }
                    }
                    var tasksSubPry = [];
                    var taskSubpr = {
                        name: proyectos[i].subproyectos[j].nombre,
                         color: colorSubpry,
                         from: minDate,
                         to: maxDate
                    };
                    tasksSubPry.push(taskSubpr);
                    var dataSbPry = {
                        name: proyectos[i].subproyectos[j].nombre,
                        parent: proyectos[i].nombre,
                        color: '#DDE2E3',
                        tasks: tasksSubPry
                    };
                    dataPrys.push(dataSbPry);
                    for ( var k = 0; k < proyectos[i].subproyectos[j].tareas.length; k++) {
                        var tasks = [];
                        var colorTarea = '#D2D2CC';
                        switch (proyectos[i].subproyectos[j].tareas[k].estado) {
                            case 'N':
                                colorTarea = "#1C05EB";
                                break;
                            case 'C':
                                colorTarea = "#929292";
                                break;
                            case 'I':
                                colorTarea = "#F3EF06";
                                break;
                            case 'P':
                                colorTarea = "#06C923";
                                break;
                        }
                        var task = {
                            name: proyectos[i].subproyectos[j].tareas[k].nombre,
            				 color: colorTarea,
            				 from: proyectos[i].subproyectos[j].tareas[k].fecini,
            				 to: proyectos[i].subproyectos[j].tareas[k].fecfin,
                        };
                        tasks.push(task);
                        var dataTrPry = {
                            name: proyectos[i].subproyectos[j].tareas[k].nombre,
                            parent: proyectos[i].subproyectos[j].nombre,
                            tasks: tasks
                        };
                        dataPrys.push(dataTrPry);
                    };
                };
            };
            $scope.data = dataPrys;
            console.log(dataPrys);
        });

    }

});

angular.module("RDash").controller('listaTareasController', function($scope, $location, Proyecto, Subproyecto, Tarea, Colaborador, Utilidad) {
    console.log('CONTROLADOR_gantt');
    $scope.selected = [];
    var semanaActual = 0;

    refresh();

    /*$scope.refreshLista = function(){*/
    function refresh() {
        var tree;
        $scope.tree_data = {};
        $scope.my_tree = tree = {};
        $scope._filter = {};

        var filtroGantt ={
            pryId : 0,
            clbrId: 0,
            estadoTarea: 'T'
        };

        $scope.estados =[{
            id: 'N',
            nombre: 'Nuevo'
        },{
            id: 'C',
            nombre: 'Cerrado'
        },{
            id: 'I',
            nombre: 'Inactivo'
        },{
            id: 'P',
            nombre: 'En Proceso'
        }];

        $scope.filtro = filtroGantt;

        var colbrId = 999999;
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            }).then(function(){
                Colaborador.getAll().then(function(colaboradores) {
                    $scope.colaboradores = colaboradores;
                    Utilidad.getSemana(new Date()).then(function(semanaCalc){
                        semanaActual = semanaCalc.semana;
                    })

                });
            });
        }


        $scope.crearTarea = function(){
            idTareaActual = null;
            $location.path('/tareas/editTareaClbr');
        }

        $scope.my_tree.cambiarEstado = function (node) {
            Tarea.get(node.Id).then(function(tarea){
                idTareaActual = tarea;
                return tarea;
            }).then(function(tareaEmulada){
                tareaEmulada.estado = node.estadoId;
                Tarea.save(tareaEmulada);
            }).then(function(){
                $location.path('/reportes/listaTareas');
            });
        };

        $scope.my_tree.registrar = function (node) {
            Tarea.get(node.Id).then(function(tarea){
                idTareaActual = tarea;
            }).then(function(){
                $location.path('/tareas/registro');
            });

        };

        $scope.my_tree.estimar = function (node) {

            Tarea.get(node.Id).then(function(tarea){
                idTareaActual = tarea;
            }).then(function(){
                $location.path('/tareas/estimacion');
            });
        };


        $scope.expanding_property = {
            /*template: "<td>OK All</td>",*/
            field: 'Nombre',
            titleClass:  'text-center',
            cellClass:   'v-middle',
            displayName: 'Nombre'
        };
        $scope.col_defs = [
            {
                field: 'estimadas',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Hr Estimadas'
            },
            {
                field: 'reportadas',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Hr Trabajadas'
            },
            {
                field: 'FechaInicial',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Fecha Inicial'
            },
            {
                field: 'FechaFinal',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Fecha Final'
            },
            {
                field: 'nombreColb',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Asignado a'
            }, {
                displayName:  'Planear Semana',
                cellTemplate: '<button ng-show="node.FechaFinal " ng-click="tree.estimar(node)" class="btn btn-default btn-sm">Planear</button>'
            },
            {
                displayName:  'Registrar Tiempo',
                cellTemplate: '<button ng-show="node.estimadas > 0 " ng-click="tree.registrar(node)" class="btn btn-default btn-sm">Registrar</button>'
            },
            {
                field: 'estadoId',
                displayName:  'Estado',
                cellTemplate: '<select ng-show="node.estadoId " ng-change="tree.cambiarEstado(node)" name="estadoId" ng-model="node.estadoId" ng-options="estado.id as estado.nombre for estado in estados" ></select>'
                /*'<button  ng-change="tree.cambiarEstado(node)" class="btn btn-default btn-sm">Asignar</button>'*/
            }
        ];

        $scope.refreshTareas = function(){
            var dataPrys=[];
            var pryId = $scope.filtro.pryId;
            var colbrId = $scope.filtro.clbrId;
            var deptoId = 0;
            if(!(idUsuarioActual)){
                $location.path('/login');
            }else{
                if(idUsuarioActual.rol != 'C'){
                    colbrId = $scope.filtro.clbrId;
                }else{
                    colbrId = idUsuarioActual.id;
                }
            }
            if(idUsuarioActual.rol != 'D'){
                deptoId = idUsuarioActual.DepartamentoId;
            }

            console.log('colbrId : '+colbrId);
            Proyecto.getGantt(colbrId,pryId,0,'T',deptoId).then(function(proyectos){
                for (var i = 0; i < proyectos.length; i++) {

                    var dataSubPrys = [];
                    var adicionarProyectp = false;
                    for (var j = 0; j < proyectos[i].subproyectos.length; j++) {

                        var dataTareas = [];
                        var adicionarSubProyectp = false;
                        for ( var k = 0; k < proyectos[i].subproyectos[j].tareas.length; k++) {
                            var totalHorasEstimadas = 0;
                            var totalHorasReportadas = 0;
                            var adicionarTarea = false;
                            var sinEstimacion = true;

                            for ( var l = 0; l < proyectos[i].subproyectos[j].tareas[k].registros.length; l++) {
                                totalHorasReportadas = totalHorasReportadas + parseFloat(proyectos[i].subproyectos[j].tareas[k].registros[l].horas);
                                if(proyectos[i].subproyectos[j].tareas[k].registros[l].semana >= (semanaActual) && proyectos[i].subproyectos[j].tareas[k].registros[l].semana <= (semanaActual+1)){
                                        adicionarTarea = true;
                                        sinEstimacion = false;
                                }
                            }
                            for ( l = 0; l < proyectos[i].subproyectos[j].tareas[k].estimaciones.length; l++) {
                                var horasPlaneadas = (parseFloat(proyectos[i].subproyectos[j].tareas[k].dias))*8*(parseFloat(proyectos[i].subproyectos[j].tareas[k].estimaciones[l].porcentaje)/100);
                                totalHorasEstimadas = totalHorasEstimadas + horasPlaneadas;
                                if(proyectos[i].subproyectos[j].tareas[k].estimaciones[l].semana >= (semanaActual) && proyectos[i].subproyectos[j].tareas[k].estimaciones[l].semana <= (semanaActual+1)){
                                        adicionarTarea = true;
                                }
                            }
                            var nombreColaborador = null;
                            var idColb = null;
                            if(proyectos[i].subproyectos[j].tareas[k].colaborador){
                                nombreColaborador=proyectos[i].subproyectos[j].tareas[k].colaborador.nombre;
                                idColb=proyectos[i].subproyectos[j].tareas[k].colaborador.id;
                            }
                            var dataTrPry = {
                                Id: proyectos[i].subproyectos[j].tareas[k].id,
                                Nombre: proyectos[i].subproyectos[j].tareas[k].nombre,
                                FechaInicial: proyectos[i].subproyectos[j].tareas[k].fecini,
                                FechaFinal: proyectos[i].subproyectos[j].tareas[k].fecfin,
                                idColb: nombreColaborador,
                                nombreColb: nombreColaborador,
                                estimadas: proyectos[i].subproyectos[j].tareas[k].horas,
                                reportadas: totalHorasReportadas,
                                estadoId: proyectos[i].subproyectos[j].tareas[k].estado,
                                __icon_class__: "fa fa-table"
                            };
                            console.log('adicionarTarea:'+adicionarTarea);
                            if(adicionarTarea  || sinEstimacion){
                                dataTareas.push(dataTrPry);
                                adicionarSubProyectp = true;
                            }
                        };

                        var dataSbPry = {
                            Id: proyectos[i].subproyectos[j].id,
                            Nombre: proyectos[i].subproyectos[j].nombre,
                            FechaInicial: null,
                            nombreColb: " ",
                            __children__: dataTareas
                        };
                        if(adicionarSubProyectp){
                            dataSubPrys.push(dataSbPry);
                            adicionarProyectp = true;
                        }
                    }


                    var dataPry = {
                        Id: proyectos[i].id,
                        Nombre: proyectos[i].nombre,
                        FechaInicial: null,
                        nombreColb: " ",
                        __children__: dataSubPrys
                    };
                    if(adicionarProyectp){
                        dataPrys.push(dataPry);
                    }

                }
                $scope.tree_data = dataPrys;
            });
        };

        $scope.refreshTareas();
    };

});

angular.module("RDash").controller('listaTareasSemController', function($scope, $location, Proyecto, Subproyecto, Tarea, Colaborador, Utilidad) {
    console.log('CONTROLADOR_TareasSem');
    $scope.selected = [];

    refresh();


    /*$scope.refreshLista = function(){*/
    function refresh() {
        var tree;
        $scope.tree_data = {};
        $scope.my_tree = tree = {};
        $scope._filter = {};

        var filtroGantt ={
            pryId : 0,
            clbrId: 0,
            estadoTarea: 'T'
        };

        $scope.filtro = filtroGantt;

        var colbrId = 999999;
        if(!(idUsuarioActual)){
            $location.path('/login');
        }else{
            Proyecto.getAll().then(function(proyectos) {
                $scope.proyectos = proyectos;
            }).then(function(){
                Colaborador.getAll().then(function(colaboradores) {
                    $scope.colaboradores = colaboradores;
                });
            });
        }

        $scope.expanding_property = {
            /*template: "<td>OK All</td>",*/
            field: 'Nombre',
            titleClass:  'text-center',
            cellClass:   'v-middle',
            displayName: 'Nombre'
        };
        $scope.col_defs = [

            {
                field: 'semana',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Semana'
            },
            {
                field: 'proyecto',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Proyecto'
            },
            {
                field: 'subproyecto',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Subproyecto'
            },
            {
                field: 'nomTarea',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Tarea'
            },
            {
                field: 'horasEst',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Hr Estimadas'
            },
            {
                field: 'horasPlan',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Hr Planeadas'
            },
            {
                field: 'horasRep',
                /*titleClass:  'text-center',*/
                cellClass:   'v-middle',
                displayName: 'Hr Trabajadas'
            }
        ];

        $scope.refreshTareas = function(){
            var dataClbdr=[];
            var pryId = $scope.filtro.pryId;
            var colbrId = $scope.filtro.clbrId;
            var semanaNum = $scope.filtro.semanaNum;
            var deptoId = 0;

            if(!(idUsuarioActual)){
                $location.path('/login');
            }else{
                if(idUsuarioActual.rol != 'C'){
                    colbrId = $scope.filtro.clbrId;
                }else{
                    colbrId = idUsuarioActual.id;
                }
                if(idUsuarioActual.rol != 'D'){
                    deptoId = idUsuarioActual.DepartamentoId;
                }
            }
            //colbrId = 0;
            var filtro = ''+0+'_'+0+'_T_'+deptoId+'_0';
            Colaborador.getTareas(colbrId,filtro).then(function(colaboradores){
                for (var i = 0; i < colaboradores.length; i++) {
                    /*Calculo semanas*/
                    var semanas = [];
                    var dataSemanas = [];
                    var dataTareas = [];
                    var semTarea = 0;
                    var dataSemana = {};
                    for (var j = 0; j < colaboradores[i].tareas.length; j++){
                        semTarea = 0;
                        dataSemana = {};
                        for ( var k = 0; k < colaboradores[i].tareas[j].registros.length; k++) {
                            semTarea = colaboradores[i].tareas[j].registros[k].semana;
                            if(semanas.indexOf(semTarea) < 0 ){
                                dataSemana = {
                                    semana: semTarea,
                                    horasRep: 0,
                                    horasPlan: 0,
                                    __children__: []
                                }
                                if(semanaNum > 0){
                                    console.log('Semana No: '+semanaNum+' semTarea : '+semTarea);
                                    if(semanaNum == semTarea){
                                        semanas.push(semTarea);
                                        dataSemanas.push(dataSemana);
                                    }
                                }else{
                                    semanas.push(semTarea);
                                    dataSemanas.push(dataSemana);
                                }
                            }
                        }
                        for ( k = 0; k < colaboradores[i].tareas[j].estimaciones.length; k++) {
                            semTarea = colaboradores[i].tareas[j].estimaciones[k].semana;
                            dataSemana = {};
                            if(semanas.indexOf(semTarea) < 0 ){
                                dataSemana = {
                                    semana: semTarea,
                                    horasRep: 0,
                                    horasPlan: 0,
                                    __children__: []
                                }
                                if(semanaNum > 0){
                                    console.log('Semana No: '+semanaNum+' semTarea : '+semTarea);
                                    if(semanaNum == semTarea){
                                        semanas.push(semTarea);
                                        dataSemanas.push(dataSemana);
                                    }
                                }else{
                                    semanas.push(semTarea);
                                    dataSemanas.push(dataSemana);
                                }
                            }
                        }
                    }
                    for(var indSem = 0; indSem < dataSemanas.length; indSem++){
                        for (j = 0; j < colaboradores[i].tareas.length; j++){
                            var horasEst = colaboradores[i].tareas[j].horas;
                            var horasPlan = 0;
                            var horasRep = 0;
                            for ( k = 0; k < colaboradores[i].tareas[j].registros.length; k++) {
                                if(dataSemanas[indSem].semana == colaboradores[i].tareas[j].registros[k].semana){
                                    horasRep = parseFloat(horasRep) + parseFloat(colaboradores[i].tareas[j].registros[k].horas);
                                }
                            }
                            for ( k = 0; k < colaboradores[i].tareas[j].estimaciones.length; k++) {
                                if(dataSemanas[indSem].semana == colaboradores[i].tareas[j].estimaciones[k].semana){
                                    horasPlan = horasPlan + colaboradores[i].tareas[j].estimaciones[k].horas;
                                }
                            }
                            var dataTarea = {
                                nomTarea: colaboradores[i].tareas[j].nombre,
                                proyecto: colaboradores[i].tareas[j].subproyecto.Proyecto.nombre,
                                subproyecto: colaboradores[i].tareas[j].subproyecto.nombre,
                                horasEst: horasEst,
                                horasPlan: horasPlan,
                                horasRep: horasRep
                            }
                            dataSemanas[indSem].horasRep = dataSemanas[indSem].horasRep + horasRep;
                            dataSemanas[indSem].horasPlan = dataSemanas[indSem].horasPlan + horasPlan;
                            dataSemanas[indSem].__children__.push(dataTarea);
                        }
                    }
                    var dataColabr = {
                        Nombre: colaboradores[i].nombre,
                        __children__: dataSemanas
                    }
                    dataClbdr.push(dataColabr);
                }
                $scope.tree_data = dataClbdr;
            });
        }

        $scope.refreshTareas();

    };

});


function rdLoading(){
    var d = {
        restrict: "AE",
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return d
}
angular.module("RDash").directive("rdLoading", rdLoading);

function rdWidgetBody(){
    var d = {
        requires: "^rdWidget",
        scope: {
            loading: "=?",
            classes: "@?"
        },
        transclude: !0,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: "E"
    };
    return d
}
angular.module("RDash").directive("rdWidgetBody", rdWidgetBody);

function rdWidgetFooter(){
    var e = {
        requires: "^rdWidget",
        transclude: !0,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: "E"
    };
    return e
}
angular.module("RDash").directive("rdWidgetFooter", rdWidgetFooter);

function rdWidgetTitle(){
    var i = {
        requires: "^rdWidget",
        scope: {
            title: "@",
            icon: "@"
        },
        transclude: !0,
        template: '<div class="widget-header"><div class="row"><div class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-right col-xs-6 col-sm-4" ng-transclude></div></div></div>',
        restrict: "E"
    };
    return i
}
angular.module("RDash").directive("rdWidgetHeader", rdWidgetTitle);

function rdWidget(){
    var d = {
        transclude: !0,
        template: '<div class="widget" ng-transclude></div>',
        restrict: "EA"
    };
    return d
}
angular.module("RDash").directive("rdWidget", rdWidget);
